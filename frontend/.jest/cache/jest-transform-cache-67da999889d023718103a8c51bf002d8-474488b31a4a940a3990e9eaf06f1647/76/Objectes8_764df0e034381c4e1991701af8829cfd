9fc43d0c5b65d9d9f8d9484a9d9dd3a1
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 * @polyfill
 * @nolint
 */

(function () {
  'use strict';

  const hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * Returns an array of the given object's own enumerable entries.
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries
   */
  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      // `null` and `undefined` values are not allowed.
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }
      const entries = [];
      for (const key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  /**
   * Returns an array of the given object's own enumerable entries.
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values
   */
  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      // `null` and `undefined` values are not allowed.
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }
      const values = [];
      for (const key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoYXNPd25Qcm9wZXJ0eSIsIk9iamVjdCIsInByb3RvdHlwZSIsImVudHJpZXMiLCJvYmplY3QiLCJUeXBlRXJyb3IiLCJrZXkiLCJjYWxsIiwicHVzaCIsInZhbHVlcyJdLCJzb3VyY2VzIjpbIk9iamVjdC5lczguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAcG9seWZpbGxcbiAqIEBub2xpbnRcbiAqL1xuXG4oZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBjb25zdCBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gYXJyYXkgb2YgdGhlIGdpdmVuIG9iamVjdCdzIG93biBlbnVtZXJhYmxlIGVudHJpZXMuXG4gICAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9lbnRyaWVzXG4gICAqL1xuICBpZiAodHlwZW9mIE9iamVjdC5lbnRyaWVzICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgT2JqZWN0LmVudHJpZXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIC8vIGBudWxsYCBhbmQgYHVuZGVmaW5lZGAgdmFsdWVzIGFyZSBub3QgYWxsb3dlZC5cbiAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuZW50cmllcyBjYWxsZWQgb24gbm9uLW9iamVjdCcpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBlbnRyaWVzID0gW107XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG4gICAgICAgICAgZW50cmllcy5wdXNoKFtrZXksIG9iamVjdFtrZXldXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBlbnRyaWVzO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhbiBhcnJheSBvZiB0aGUgZ2l2ZW4gb2JqZWN0J3Mgb3duIGVudW1lcmFibGUgZW50cmllcy5cbiAgICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L3ZhbHVlc1xuICAgKi9cbiAgaWYgKHR5cGVvZiBPYmplY3QudmFsdWVzICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgT2JqZWN0LnZhbHVlcyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgLy8gYG51bGxgIGFuZCBgdW5kZWZpbmVkYCB2YWx1ZXMgYXJlIG5vdCBhbGxvd2VkLlxuICAgICAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC52YWx1ZXMgY2FsbGVkIG9uIG5vbi1vYmplY3QnKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG4gICAgICAgICAgdmFsdWVzLnB1c2gob2JqZWN0W2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH07XG4gIH1cbn0pKCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUMsWUFBVztFQUNWLFlBQVk7O0VBRVosTUFBTUEsY0FBYyxHQUFHQyxNQUFNLENBQUNDLFNBQVMsQ0FBQ0YsY0FBYzs7RUFFdEQ7QUFDRjtBQUNBO0FBQ0E7RUFDRSxJQUFJLE9BQU9DLE1BQU0sQ0FBQ0UsT0FBTyxLQUFLLFVBQVUsRUFBRTtJQUN4Q0YsTUFBTSxDQUFDRSxPQUFPLEdBQUcsVUFBU0MsTUFBTSxFQUFFO01BQ2hDO01BQ0EsSUFBSUEsTUFBTSxJQUFJLElBQUksRUFBRTtRQUNsQixNQUFNLElBQUlDLFNBQVMsQ0FBQyxxQ0FBcUMsQ0FBQztNQUM1RDtNQUVBLE1BQU1GLE9BQU8sR0FBRyxFQUFFO01BQ2xCLEtBQUssTUFBTUcsR0FBRyxJQUFJRixNQUFNLEVBQUU7UUFDeEIsSUFBSUosY0FBYyxDQUFDTyxJQUFJLENBQUNILE1BQU0sRUFBRUUsR0FBRyxDQUFDLEVBQUU7VUFDcENILE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLENBQUNGLEdBQUcsRUFBRUYsTUFBTSxDQUFDRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2xDO01BQ0Y7TUFDQSxPQUFPSCxPQUFPO0lBQ2hCLENBQUM7RUFDSDs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFLElBQUksT0FBT0YsTUFBTSxDQUFDUSxNQUFNLEtBQUssVUFBVSxFQUFFO0lBQ3ZDUixNQUFNLENBQUNRLE1BQU0sR0FBRyxVQUFTTCxNQUFNLEVBQUU7TUFDL0I7TUFDQSxJQUFJQSxNQUFNLElBQUksSUFBSSxFQUFFO1FBQ2xCLE1BQU0sSUFBSUMsU0FBUyxDQUFDLG9DQUFvQyxDQUFDO01BQzNEO01BRUEsTUFBTUksTUFBTSxHQUFHLEVBQUU7TUFDakIsS0FBSyxNQUFNSCxHQUFHLElBQUlGLE1BQU0sRUFBRTtRQUN4QixJQUFJSixjQUFjLENBQUNPLElBQUksQ0FBQ0gsTUFBTSxFQUFFRSxHQUFHLENBQUMsRUFBRTtVQUNwQ0csTUFBTSxDQUFDRCxJQUFJLENBQUNKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLENBQUM7UUFDMUI7TUFDRjtNQUNBLE9BQU9HLE1BQU07SUFDZixDQUFDO0VBQ0g7QUFDRixDQUFDLEVBQUUsQ0FBQyJ9